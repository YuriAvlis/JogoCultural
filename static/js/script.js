let perguntas = [];
let indice = 0;
let pontuacao = 0;
let idioma = 'pt';
let ranking = [];

// Transi√ß√µes diferentes para cada pergunta
const transicoes = [
  'slideInLeft',
  'slideInRight', 
  'slideInUp',
  'zoomIn',
  'rotateIn',
  'bounceIn'
];

function carregarPerguntas() {
  idioma = document.getElementById("idioma").value;
  fetch(`/perguntas?lang=${idioma}`)
    .then(res => res.json())
    .then(data => {
      perguntas = data;
      indice = 0;
      pontuacao = 0;
      mostrarPergunta();
    });
}

function carregarRanking() {
  fetch('/ranking')
    .then(res => res.json())
    .then(data => {
      ranking = data;
      atualizarRankingSidebar();
    });
}

function atualizarRankingSidebar() {
  const rankingList = document.getElementById('ranking-list');
  rankingList.innerHTML = '';
  
  ranking.slice(0, 10).forEach((jogador, index) => {
    const li = document.createElement('li');
    li.className = `ranking-item ${index < 3 ? 'top-3' : ''}`;
    
    li.innerHTML = `
      <span class="ranking-position">#${index + 1}</span>
      <span class="ranking-name">${jogador.nome}</span>
      <span class="ranking-points">${jogador.pontos}pts</span>
    `;
    
    // Anima√ß√£o escalonada para cada item
    li.style.animationDelay = `${index * 0.1}s`;
    li.style.animation = 'slideInLeft 0.5s ease-out forwards';
    
    rankingList.appendChild(li);
  });
}

function mostrarPergunta() {
  const quizBox = document.getElementById("quiz-box");
  const p = perguntas[indice];
  
  // Aplicar transi√ß√£o de sa√≠da
  quizBox.classList.add('fade-out');
  
  setTimeout(() => {
    // Atualizar conte√∫do
    document.getElementById("tema").innerText = `${getThemeIcon(p.tema)} ${p.tema}`;
    document.getElementById("pergunta").innerText = p.pergunta;
    document.getElementById("opcoes").innerHTML = "";
    document.getElementById("explicacao").classList.add("hidden");

    p.opcoes.forEach((op, i) => {
      const btn = document.createElement("button");
      btn.innerText = `${String.fromCharCode(65 + i)}. ${op}`;
      btn.onclick = () => responder(i);
      
      // Anima√ß√£o escalonada para as op√ß√µes
      btn.style.animationDelay = `${i * 0.1}s`;
      btn.style.animation = 'slideInUp 0.4s ease-out forwards';
      btn.style.opacity = '0';
      
      document.getElementById("opcoes").appendChild(btn);
    });

    document.getElementById("proximo").disabled = true;
    
    // Aplicar transi√ß√£o de entrada com efeito diferente
    quizBox.classList.remove('fade-out');
    quizBox.classList.add('fade-in');
    
    // Aplicar transi√ß√£o espec√≠fica baseada no √≠ndice da pergunta
    const transicaoAtual = transicoes[indice % transicoes.length];
    quizBox.style.animation = `${transicaoAtual} 0.6s ease-out`;
    
    // Remover classes ap√≥s anima√ß√£o
    setTimeout(() => {
      quizBox.classList.remove('fade-in');
      quizBox.style.animation = '';
      
      // Mostrar op√ß√µes com delay
      const opcoes = document.querySelectorAll("#opcoes button");
      opcoes.forEach(btn => {
        btn.style.opacity = '1';
      });
    }, 600);
    
  }, 300);
}

function getThemeIcon(tema) {
  const icons = {
    'Culin√°ria': 'üçú', 'Cuisine': 'üçú',
    'Religi√£o': 'üïâÔ∏è', 'Religion': 'üïâÔ∏è',
    'Arte': 'üé®', 'Art': 'üé®',
    'Vestimenta': 'üëò', 'Clothing': 'üëò',
    'Arquitetura': 'üèõÔ∏è', 'Architecture': 'üèõÔ∏è',
    'L√≠ngua': 'üó£Ô∏è', 'Language': 'üó£Ô∏è',
    'Dan√ßa': 'üíÉ', 'Dance': 'üíÉ',
    'M√∫sica': 'üéµ', 'Music': 'üéµ',
    'Festas': 'üéâ', 'Festivals': 'üéâ',
    'Cinema': 'üé¨', 'Cinema': 'üé¨',
    'Mitologia': '‚ö°', 'Mythology': '‚ö°',
    'Esportes Tradicionais': 'ü•ã', 'Traditional Sports': 'ü•ã',
    'Literatura': 'üìö', 'Literature': 'üìö',
    'Tradi√ß√µes': 'üé≠', 'Traditions': 'üé≠',
    'Arquitetura Religiosa': '‚õ™', 'Religious Architecture': '‚õ™',
    'L√≠ngua Alem√£': 'üá©üá™', 'German Language': 'üá©üá™',
    'L√≠ngua Francesa': 'üá´üá∑', 'French Language': 'üá´üá∑'
  };
  return icons[tema] || 'üåç';
}

function responder(indiceEscolhido) {
  const p = perguntas[indice];
  const opcoes = document.querySelectorAll("#opcoes button");

  // Desabilita todos os bot√µes de op√ß√£o
  opcoes.forEach(b => b.disabled = true);

  const exp = document.getElementById("explicacao");
  exp.classList.remove("hidden");

  // Efeito sonoro simulado com vibra√ß√£o (se suportado)
  if (navigator.vibrate) {
    if (indiceEscolhido === p.resposta_correta) {
      navigator.vibrate([100, 50, 100]); // Padr√£o de sucesso
    } else {
      navigator.vibrate([200, 100, 200, 100, 200]); // Padr√£o de erro
    }
  }

  if (indiceEscolhido === p.resposta_correta) {
    pontuacao += 10;
    exp.innerHTML = `‚úÖ <strong>Resposta correta!</strong><br><em>${p.explicacao}</em>`;
    opcoes[indiceEscolhido].classList.add("correta");
    
    // Efeito de part√≠culas simulado
    criarEfeitoSucesso(opcoes[indiceEscolhido]);
  } else {
    exp.innerHTML = `‚ùå <strong>Resposta errada!</strong> A correta era: <strong>${p.opcoes[p.resposta_correta]}</strong><br><em>${p.explicacao}</em>`;
    opcoes[indiceEscolhido].classList.add("errada");
    opcoes[p.resposta_correta].classList.add("correta");
  }

  document.getElementById("proximo").disabled = false;
  
  // Atualizar pontua√ß√£o em tempo real
  atualizarPontuacaoAtual();
}

function criarEfeitoSucesso(elemento) {
  // Criar efeito de brilho tempor√°rio
  elemento.style.boxShadow = '0 0 50px rgba(0, 255, 136, 0.8), 0 0 100px rgba(0, 255, 136, 0.4)';
  elemento.style.transform = 'scale(1.05)';
  
  setTimeout(() => {
    elemento.style.transform = 'scale(1)';
  }, 300);
}

function atualizarPontuacaoAtual() {
  // Criar ou atualizar indicador de pontua√ß√£o atual
  let pontuacaoAtual = document.getElementById('pontuacao-atual');
  if (!pontuacaoAtual) {
    pontuacaoAtual = document.createElement('div');
    pontuacaoAtual.id = 'pontuacao-atual';
    pontuacaoAtual.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      background: linear-gradient(135deg, rgba(0, 255, 255, 0.2), rgba(255, 0, 255, 0.2));
      border: 2px solid var(--primary-color);
      border-radius: 15px;
      padding: 15px 25px;
      color: var(--text-light);
      font-weight: bold;
      font-size: 1.2rem;
      backdrop-filter: blur(10px);
      z-index: 1000;
      animation: slideInRight 0.5s ease-out;
    `;
    document.body.appendChild(pontuacaoAtual);
  }
  
  pontuacaoAtual.innerHTML = `‚≠ê ${pontuacao} pontos`;
  
  // Efeito de pulsa√ß√£o quando a pontua√ß√£o muda
  pontuacaoAtual.style.animation = 'none';
  setTimeout(() => {
    pontuacaoAtual.style.animation = 'titlePulse 0.5s ease-out';
  }, 10);
}

function proximaPergunta() {
  indice++;
  if (indice < perguntas.length) {
    mostrarPergunta();
  } else {
    mostrarResultado();
  }
}

function mostrarResultado() {
  document.getElementById("quiz-box").classList.add("hidden");
  document.getElementById("resultado").classList.remove("hidden");
  document.getElementById("pontuacao-final").innerText = `${pontuacao} pontos`;

  // Remover indicador de pontua√ß√£o atual
  const pontuacaoAtual = document.getElementById('pontuacao-atual');
  if (pontuacaoAtual) {
    pontuacaoAtual.remove();
  }

  // Mostrar link bonus se pontua√ß√£o alta
  if (pontuacao >= 20) {
    document.getElementById("link-bonus").classList.remove("hidden");
  }
  
  // Efeito de fogos de artif√≠cio simulado para pontua√ß√µes altas
  if (pontuacao >= 50) {
    criarEfeitoFogosArtificio();
  }
}

function criarEfeitoFogosArtificio() {
  // Criar m√∫ltiplos elementos de "fa√≠sca" tempor√°rios
  for (let i = 0; i < 20; i++) {
    const faisca = document.createElement('div');
    faisca.style.cssText = `
      position: fixed;
      width: 4px;
      height: 4px;
      background: ${['#00ffff', '#ff00ff', '#ffff00'][Math.floor(Math.random() * 3)]};
      border-radius: 50%;
      pointer-events: none;
      z-index: 9999;
      left: 50%;
      top: 50%;
      animation: firework${i} 2s ease-out forwards;
    `;
    
    // Criar anima√ß√£o √∫nica para cada fa√≠sca
    const style = document.createElement('style');
    style.textContent = `
      @keyframes firework${i} {
        0% {
          transform: translate(0, 0) scale(1);
          opacity: 1;
        }
        100% {
          transform: translate(${(Math.random() - 0.5) * 400}px, ${(Math.random() - 0.5) * 400}px) scale(0);
          opacity: 0;
        }
      }
    `;
    document.head.appendChild(style);
    document.body.appendChild(faisca);
    
    // Remover elementos ap√≥s anima√ß√£o
    setTimeout(() => {
      faisca.remove();
      style.remove();
    }, 2000);
  }
}

function enviarPontuacao() {
  const nome = document.getElementById("nome-jogador").value || "An√¥nimo";
  fetch("/pontuar", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ nome, pontos: pontuacao })
  }).then(() => {
    alert("Pontua√ß√£o salva com sucesso! üéâ");
    carregarRanking(); // Atualizar ranking ap√≥s salvar
  });
}

// Adicionar CSS din√¢mico para anima√ß√µes extras
function adicionarAnimacoesExtras() {
  const style = document.createElement('style');
  style.textContent = `
    @keyframes rotateIn {
      from {
        opacity: 0;
        transform: rotate(-180deg) scale(0.5);
      }
      to {
        opacity: 1;
        transform: rotate(0deg) scale(1);
      }
    }
    
    @keyframes bounceIn {
      0% {
        opacity: 0;
        transform: scale(0.3) translateY(-100px);
      }
      50% {
        opacity: 1;
        transform: scale(1.05) translateY(0);
      }
      70% {
        transform: scale(0.9);
      }
      100% {
        transform: scale(1);
      }
    }
  `;
  document.head.appendChild(style);
}

// Inicializa√ß√£o
document.addEventListener('DOMContentLoaded', function() {
  adicionarAnimacoesExtras();
  carregarPerguntas();
  carregarRanking();
  
  // Atualizar ranking a cada 30 segundos
  setInterval(carregarRanking, 30000);
});